version: "3"
services:
  # proxy:
  #   image: fugroup/proxy:latest
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #   ports:
  #     - ${PROXY_PORT}:8080
  #   networks:
  #     - external
  #   depends_on:
  #     - websocket
  #     - account
  #     - upload
  loadbalancer:
    image: fugroup/loadbalancer:latest
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - ${PROXY_PORT}:8888
    networks:
      - external
    depends_on:
      - websocket
      - account
      - upload
  setup:
    image: bitnami/mongodb:latest
    user: root
    command: chown -R 1001:1001 /bitnami
  mongodb:
    image: bitnami/mongodb:latest
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - data:/bitnami
    networks:
      - internal
    depends_on:
      - setup
  redis:
    image: bitnami/redis:latest
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - internal
    depends_on:
      - mongodb
  websocket:
    image: fugroup/websocket:latest
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - 5555:5555
    environment:
      - NODE_ENV=production
    networks:
      - external
      - internal
    depends_on:
      - mongodb
      - redis
  account:
    image: fugroup/account:latest
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - 6666:6666
    environment:
      - NODE_ENV=production
    networks:
      - external
      - internal
    depends_on:
      - mongodb
      - redis
  upload:
    image: fugroup/upload:latest
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - 7777:7777
    environment:
      - NODE_ENV=production
    networks:
      - external
      - internal
    depends_on:
      - mongodb
      - redis
networks:
  external:
  internal:
volumes:
  data:
    driver: local
